# override stages for rpm building
stages:
  - package

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
default:
  image: debian:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GBP_BUILD_CMD: "gbp buildpackage --git-ignore-branch --git-tarball-dir=origtargz --git-ignore-new --git-builder='sbuild -d $SCHROOT --build-dir=builddeb --dpkg-source-opts=\"--diff-ignore=origtargz --extend-diff-ignore=|.git\"'"
 
.build_debian:
  stage: package
  variables:
    SCHROOT: unstable
    DISTRIBUTION: UNRELEASED
  before_script: ""
  tags:
    - docker
  script:
    - mkdir builddeb
    - if [ $NIGHTLY_BUILD == 1 ]; then RELEASE=~`date +%Y%m%d`.$CI_COMMIT_SHORT_SHA; MESSAGE="Nightly build" ; fi
    - if [ -n "$CI_COMMIT_TAG" ]; then RELEASE=.release.$CI_COMMIT_TAG; MESSAGE="Tagged release $CI_COMMIT_TAG"; fi
    - dch -l${RELEASE}. --distribution $DISTRIBUTION "$MESSAGE"
    - echo "$GBP_BUILD_CMD"
    - eval "$GBP_BUILD_CMD"
  artifacts:
    paths:
      - builddeb/
  rules:
    - if: $CI_COMMIT_SHA
    - if: $CI_COMMIT_TAG
    - if: $NIGHTLY_BUILD
  
build_debian_unstable:
  extends:
    - .build_debian
  variables:
    DISTRIBUTION: unstable

build_debian_bookworm:
  extends:
    - .build_debian
  variables:
    DISTRIBUTION: bookworm
    SCHROOT: bookworm

build_ubuntu_jammy:
    extends:
        - .build_debian
    variables:
        DISTRIBUTION: jammy
        SCHROOT: jammy
